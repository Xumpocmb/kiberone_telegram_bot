from tg_bot.configs.logger_config import get_logger


from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from tg_bot.keyboards.inline_keyboards.inline_keyboard_main_menu import (
    main_menu_inline_keyboard_for_client,
    main_menu_inline_keyboard_for_lead_with_group,
    main_menu_inline_keyboard_for_lead_without_group,
)
from tg_bot.service.api_requests import find_user_in_django


logger = get_logger()
main_menu_router: Router = Router()

USER_STATUS_CLIENT = "2"
USER_STATUS_LEAD_WITH_GROUP = "1"
USER_STATUS_LEAD_WITHOUT_GROUP = "0"


keyboards_by_status = {
    USER_STATUS_CLIENT: main_menu_inline_keyboard_for_client,
    USER_STATUS_LEAD_WITH_GROUP: main_menu_inline_keyboard_for_lead_with_group,
    USER_STATUS_LEAD_WITHOUT_GROUP: main_menu_inline_keyboard_for_lead_without_group,
}


@main_menu_router.message(Command("menu"))
async def menu_handler(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞.
    """
    telegram_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard = await get_user_keyboard(telegram_id)

    if not keyboard:
        await message.answer(
            "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start."
        )
        return

    await message.answer("–í–æ—Ç –º–æ–µ –º–µ–Ω—é ü§ó:", reply_markup=keyboard)


@main_menu_router.callback_query(F.data == "inline_main_menu")
async def main_menu_handler(callback: CallbackQuery):
    telegram_id = callback.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keyboard = await get_user_keyboard(telegram_id)
    if not keyboard:
        await callback.message.answer(
            "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start."
        )
        return
    await callback.message.edit_text("–í–æ—Ç –≤–∞—à–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard)
    await callback.answer()


async def get_user_keyboard(telegram_id):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Django
        find_result = await find_user_in_django(telegram_id)
        if not find_result or not find_result.get("success"):
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î: {find_result}")
            return None

        db_user = find_result.get("user")
        if not db_user or "id" not in db_user:
            logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {db_user}")
            return None

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_status = db_user.get("status", "0")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "Lead"
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å: {user_status}")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        return keyboards_by_status.get(
            user_status, main_menu_inline_keyboard_for_lead_without_group
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return None
