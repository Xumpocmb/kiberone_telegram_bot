from aiogram import Router, F
from aiogram import Router, F
from aiogram.types import CallbackQuery

from tg_bot.service.api_requests import get_user_balances_from_api

balance_router = Router()


@balance_router.callback_query(F.data == "check_balance")
async def check_balance_handler(callback: CallbackQuery):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å—ã –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    telegram_id = callback.from_user.id

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
    await callback.message.answer("‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é –±–∞–ª–∞–Ω—Å—ã –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤...")

    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ API
    balances = await get_user_balances_from_api(telegram_id)
    if not balances:
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–∞—Ö.")
        await callback.answer()
        return

    # –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å—ã –ø—É—Å—Ç—ã–µ
    if not balances:
        await callback.message.answer("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –±–∞–ª–∞–Ω—Å–æ–º.")
        await callback.answer()
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–∞–ª–∞–Ω—Å–∞–º–∏
    balance_message = "üìä <b>–ë–∞–ª–∞–Ω—Å—ã –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:</b>\n\n"
    for client in balances:
        client_name = client.get("client_name", "üë§ –ë–µ–∑ –∏–º–µ–Ω–∏")
        balance = client.get("balance", 0.0)
        balance_message += f"‚Ä¢ {client_name}: <b>{balance:.2f} ‚ÇΩ</b>\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–∞–º–∏
    await callback.message.answer(balance_message, parse_mode="HTML")
    await callback.answer("‚úÖ –ë–∞–ª–∞–Ω—Å—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã!")
